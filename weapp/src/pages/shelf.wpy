<style lang="less" src='./shelf.less'>

</style>

<template>
<!--shelf.wxml-->
<view>
  <view class="book-list">
    <view class="book-item" wx:for="{{ books }}" wx:key="*this">
      <text class="icon icon-bk-remove" bindtap="delBook" wx:if="{{ mode }}" data-book-id="{{ item.id }}"></text>
      <image src="{{ item.book_image}}" class="book-image" bindtap="handleBookClick" data-book-id="{{ item.id }}" data-book-name="{{ item.name }}"></image>
      <text>{{ item.name }}</text>
    </view>
  </view>
  <view class="bottom-bar">
      <view class="tip">添加书籍（暂支持抓取【笔趣阁】来源）：</view>
      <view class="fetch-wrap">
        <input placeholder="输入书籍url或书籍id" value="{{inputValue}}" bindinput="bindKeyInput"/>
        <view @tap="handleSendBtnClick" class="send-btn">添加书籍</view>
      </view>
  </view>
  <toast />
</view>

</template>

<script>
import wepy from 'wepy'
import request from '../components/request'

import Toast from '../components/toast'

export default class Shelf extends wepy.page {
    config = {
        navigationBarTitleText: "我的书架",
        navigationBarBackgroundColor: "#fff",
        navigationBarTextStyle: "black",
        backgroundColor: '#f8f8f8',
        enablePullDownRefresh: true,
    }

    components = {
        toast: Toast,
    }

    data = {
        books: [],
        mode: false,
        inputValue: '',
        isAddBookSubmiting: false,
    }

    onLoad(options){
        this.fetchBookList();
    }

    async onPullDownRefresh() {
        //   wepy.stopPullDownRefresh();
        wepy.showNavigationBarLoading()
        await this.fetchBookList();

        wepy.hideNavigationBarLoading();

        wepy.stopPullDownRefresh();
    }

    async fetchBookList() {
        wepy.showLoading({
            title: '加载中',
        });

        try {
            let res = await request({
                url: '/api/book/list',
                data: {
                    page: 1,
                }
            });

            wepy.hideLoading();

            if (res.records) {
                this.books = res.records;
                this.$apply();
            }

            return res.records;
        } catch(error) {
            wepy.hideLoading();
            console.error(error);
            return [];
        }
    }

    toast(title) {
        return this.$invoke('toast', 'show', {
            title: title,
        });
    }

    methods = {
        handleBookClick(e) {
            let bookId = e.target.dataset.bookId;
            let bookName = e.target.dataset.bookName;

            this.$navigate('/pages/chapter-list', {
                id: bookId,
                name: bookName,
            });
        },
        bindKeyInput: function(e) {
            this.inputValue = e.detail.value;
            this.$apply();
        },
        async handleSendBtnClick() {
            if (this.isAddBookSubmiting) {
                return;
            }

            if (!this.inputValue.length) {
                this.toast('请输入要抓取的书籍url或ID');
                return;
            }

            let bookId;
            let matchs = this.inputValue.match(/(\d+)(?=(\/?))/);
            if (matchs && matchs.length > 1) {
                bookId = matchs[1];
            }

            if (!bookId) {
                this.toast('输入有误！');
                return;
            }

            this.isAddBookSubmiting = true;

            wepy.showLoading({
                title: '提交中'
            });
        
            try {
                let res = await request({
                    url: '/api/task/biquge/book/init',
                    data: {
                        bookId: bookId,
                    }
                });

                wepy.hideLoading();
                this.isAddBookSubmiting = false;
                this.toast('请求成功！稍后请刷新页面查看');
                this.$apply();

            } catch(error) {
                console.error(error);
                wepy.hideLoading();
                this.isAddBookSubmiting = false;
                this.$apply();
                return;
            }
        }
    }
}

</script>
